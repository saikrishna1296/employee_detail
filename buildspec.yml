version: 0.2

env:
  variables:
    ECR_REPOSITORY: "akash"                     # Your ECR repository name
    AWS_ACCOUNT_ID: "381492133980"              # Your AWS Account ID
    AWS_REGION: "us-east-1"                     # Your AWS region
    IMAGE_TAG: "latest"                         # Docker image tag
    REPO_URI: "381492133980.dkr.ecr.us-east-1.amazonaws.com/akash"  # Full ECR repo URI

phases:
  install:
    runtime-versions:
      java: corretto17  # Ensure Java 17 is available
    commands:
      - echo "Installing Docker..."
      - yum install -y docker  # Install Docker
      - echo "Starting Docker daemon..."
      - nohup dockerd &  # Start Docker in the background
      - timeout 15 sh -c "until docker info; do echo 'Waiting for Docker to start...'; sleep 1; done"  # Wait for Docker to be ready
      - docker --version  # Verify Docker installation
      - echo "Installing Maven..."
      - yum install -y maven  # Install Maven
      - mvn -version  # Verify Maven installation

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPO_URI
      - echo "ECR login successful."

  build:
    commands:
      - echo "Building the project with Maven..."
      - mvn clean package -DskipTests  # Build the application without running tests
      - echo "Building Docker image..."
      - docker build -t employee_details .  # Build the Docker image
      - echo "Tagging Docker image for ECR..."
      - docker tag employee_details:latest $REPO_URI:$IMAGE_TAG
      - echo "Pushing Docker image to ECR..."
      - docker push $REPO_URI:$IMAGE_TAG  # Push image to ECR

artifacts:
  files:
    - task-definition.json  # Include the task definition JSON file

cache:
  paths:
    - "/root/.m2/**/*"  # Cache Maven dependencies to speed up builds
